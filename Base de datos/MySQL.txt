-- Crear el usuario
CREATE USER 'Integrador'@'%' IDENTIFIED BY 'Integrador';

-- Conceder permisos
GRANT SELECT, INSERT, UPDATE, CREATE, REFERENCES ON integrador.* TO 'Integrador'@'%';
-- Aplicar los cambios
FLUSH PRIVILEGES;

-- Verificar usuario y permisos
SELECT user, host FROM mysql.user;
SHOW GRANTS FOR 'Integrador'@'%';

CREATE DATABASE integrador;

USE integrador;
CREATE TABLE armas (
    codigo_arma INT NOT NULL AUTO_INCREMENT, 
    tipo_arma VARCHAR(50) NOT NULL, 
    arma VARCHAR(50) NOT NULL,
    PRIMARY KEY (codigo_arma)
);

CREATE TABLE vigilancias (
    codigo_vig INT NOT NULL AUTO_INCREMENT, 
    nombre_zona VARCHAR(50) NOT NULL, 
    codigo_subcircuito VARCHAR(11), 
    codigo_circuito VARCHAR(8), 
    codigo_distrito VARCHAR(5), 
    nombre_subcircuito VARCHAR(50), 
    nombre_circuito VARCHAR(50), 
    nombre_distrito VARCHAR(50), 
    nombre_subzona VARCHAR(50) NOT NULL,
    PRIMARY KEY (codigo_vig)
);


CREATE TABLE personas (
    id_persona INT NOT NULL AUTO_INCREMENT, 
    nacionalidad VARCHAR(50) NOT NULL, 
    autoidentificacion_etnica VARCHAR(25), 
    estatus_migratorio VARCHAR(15), 
    numero_detenciones INT NOT NULL, 
    estado_civil VARCHAR(15), 
    nivel_de_instruccion VARCHAR(25), 
    genero VARCHAR(15), 
    edad INT NOT NULL, 
    sexo VARCHAR(15) NOT NULL,
    PRIMARY KEY (id_persona)
);


CREATE TABLE provincias (
    codigo_provincia INT NOT NULL AUTO_INCREMENT, 
    nombre_provincia VARCHAR(25),
    PRIMARY KEY (codigo_provincia)
);

USE integrador;
CREATE TABLE canton (
    codigo_canton INT NOT NULL AUTO_INCREMENT, 
    nombre_canton VARCHAR(25), 
    Provincias_codigo_provincia INT NOT NULL,
    PRIMARY KEY (codigo_canton),
    FOREIGN KEY (Provincias_codigo_provincia) REFERENCES provincias(codigo_provincia)
);

CREATE TABLE parroquias (
    codigo_parroquia INT NOT NULL AUTO_INCREMENT, 
    nombre_parroquia VARCHAR(25), 
    Canton_codigo_canton INT NOT NULL,
    PRIMARY KEY (codigo_parroquia),
    FOREIGN KEY (Canton_codigo_canton) REFERENCES canton(codigo_canton)
);


CREATE TABLE detenciones (
    codigo_det INT NOT NULL AUTO_INCREMENT, 
    presunta_flagrancia CHAR(2), 
    codigo_iccs VARCHAR(15), 
    tipo VARCHAR(15), 
    presunta_subinfraccion VARCHAR(50) NOT NULL, 
    tipo_lugar VARCHAR(50), 
    condicion VARCHAR(25), 
    presunta_modalidad VARCHAR(50), 
    presunta_infraccion VARCHAR(100), 
    movilizacion VARCHAR(25), 
    fecha_detencion_aprehension DATE NOT NULL, 
    hora_detencion_aprehension TIME, 
    lugar VARCHAR(50), 
    parroquias_codigo_parroquia INT NOT NULL, 
    vigilancias_codigo_vig INT NOT NULL, 
    personas_id_persona INT NOT NULL,
    PRIMARY KEY (codigo_det),
    FOREIGN KEY (parroquias_codigo_parroquia) REFERENCES parroquias(codigo_parroquia),
    FOREIGN KEY (vigilancias_codigo_vig) REFERENCES vigilancias(codigo_vig),
    FOREIGN KEY (personas_id_persona) REFERENCES personas(id_persona)
);

CREATE TABLE `Armas_Detenciones` (
    armas_codigo_arma INT NOT NULL AUTO_INCREMENT, 
    detenciones_codigo_det INT NOT NULL,
    PRIMARY KEY (armas_codigo_arma, detenciones_codigo_det),
    FOREIGN KEY (armas_codigo_arma) REFERENCES armas(codigo_arma),
    FOREIGN KEY (detenciones_codigo_det) REFERENCES detenciones(codigo_det)
);

DELIMITER //

CREATE TRIGGER trg_update_numero_detenciones
AFTER INSERT ON detenciones
FOR EACH ROW
BEGIN
    DECLARE total_detenciones INT;
    
    -- Calcular el número total de detenciones para la persona
    SELECT COUNT(*) INTO total_detenciones
    FROM detenciones
    WHERE personas_id_persona = NEW.personas_id_persona;

    -- Actualizar la tabla personas
    UPDATE personas
    SET numero_detenciones = total_detenciones
    WHERE id_persona = NEW.personas_id_persona;
END//

CREATE TRIGGER trg_update_numero_detenciones_del
AFTER DELETE ON detenciones
FOR EACH ROW
BEGIN
    DECLARE total_detenciones INT;
    
    -- Calcular el número total de detenciones para la persona
    SELECT COUNT(*) INTO total_detenciones
    FROM detenciones
    WHERE personas_id_persona = OLD.personas_id_persona;

    -- Actualizar la tabla personas
    UPDATE personas
    SET numero_detenciones = total_detenciones
    WHERE id_persona = OLD.personas_id_persona;
END//

DELIMITER ;